name: 'Set context variables'
description: 'An action to set context variables for workflows'

outputs:
  isCI:
    description: "is a CI change event."
    value: ${{ steps.vars.outputs.isCI }}
  isPR:
    description: "is a pull request."
    value: ${{ steps.vars.outputs.isPR }}
  isDraft:
    description: "is a draft pull request event."
    value: ${{ steps.vars.outputs.isDraft }}
  isPush:
    description: "is a push event."
    value: ${{ steps.vars.outputs.isPush }}
  isMainBranch:
    description: "is a push to the main branch."
    value: ${{ steps.vars.outputs.isMainBranch }}
  doBuild:
    description: "should build the project."
    value: ${{ steps.set-type.outputs.doBuild }}
  doRelease:
    description: "should release the project."
    value: ${{ steps.set-type.outputs.doRelease }}
  checkRelease:
    description: "should check the release is viable, but not release."
    value: ${{ steps.set-type.outputs.checkRelease }}

runs:
  using: 'composite'
  steps:
    - id: vars
      shell: bash
      run: |
        echo "Setting variables using event_data..."
        echo "isPush=${{ github.event_name == 'push' }}" >> $GITHUB_OUTPUT
        echo "isPR=${{ github.event_name == 'pull_request' && github.event.pull_request.draft == false }}" >> $GITHUB_OUTPUT
        echo "isMainBranch=${{ contains(github.event.ref, 'refs/heads/main') }}" >> $GITHUB_OUTPUT
        echo "isTag=${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}" >> $GITHUB_OUTPUT
        echo "isDraft=${{ github.event_name == 'pull_request' && github.event.pull_request.draft == true }}" >> $GITHUB_OUTPUT
        echo "isReleaseDraft=${{ github.event_name == 'release' && github.event.release.draft == true }}" >> $GITHUB_OUTPUT
        echo "isRelease=${{ github.event_name == 'release' }}" >> $GITHUB_OUTPUT
        echo "isPreRelease=${{ github.event_name == 'release' && github.event.release.prerelease == true }}" >> $GITHUB_OUTPUT
        echo "forceBuild=${{ contains(github.event.pull_request.title, '[build]') }}" >> $GITHUB_OUTPUT
        echo "isCI=${{ contains(github.event.pull_request.title, 'ci:') }}" >> $GITHUB_OUTPUT
    - id: set-type
      shell: bash
      run: |
        echo "Setting pipeline type..."
        # Should build if it's a push to main, a non-draft PR, or a PR with '[build]' in the title
        forceBuild=${{ steps.vars.outputs.forceBuild }}
        isPR=${{ steps.vars.outputs.isPR }}
        isPush=${{ steps.vars.outputs.isPush }}
        isMainBranch=${{ steps.vars.outputs.isMainBranch }}
        if $forceBuild || $isPR || ($isPush && $isMainBranch); then
          echo "doBuild=true" >> $GITHUB_OUTPUT
        else
          echo "doBuild=false" >> $GITHUB_OUTPUT
        fi
        
        isRelease=${{ steps.vars.outputs.isRelease }}
        isPreRelease=${{ steps.vars.outputs.isPreRelease }}
        isReleaseDraft=${{ steps.vars.outputs.isReleaseDraft }}
        if $isRelease && !$isReleaseDraft; then
          if $isPreRelease; then
            echo "doRelease=false" >> $GITHUB_OUTPUT
            echo "checkRelease=true" >> $GITHUB_OUTPUT
          else
            echo "doRelease=true" >> $GITHUB_OUTPUT
            echo "checkRelease=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "doRelease=false" >> $GITHUB_OUTPUT
          echo "checkRelease=false" >> $GITHUB_OUTPUT
        fi
